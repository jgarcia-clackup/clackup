/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    google()
    mavenCentral()
    jcenter() //here
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'
    implementation 'com.azure:azure-storage-blob:12.25.1'
    implementation 'com.azure:azure-identity:1.11.1' 
    implementation 'commons-io:commons-io:2.15.1'   

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
task fatJar(type: Jar) {
  manifest {
    attributes 'Main-Class': 'clackup.App'
  }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
  archiveClassifier = "all"
  with jar
}

application {
    // Define the main class for the application.
    mainClass = 'clackup.App'
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
        }
        resources {
            srcDirs "src/main/resources"
        }
    }
    
 }


application {
    // Define the main class for the application.
    mainClass = 'clackup.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

apply plugin: 'java-library'
